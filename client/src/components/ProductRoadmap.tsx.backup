import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { CheckCircle2, Clock, TrendingUp, Users, Package, Target } from "lucide-react";

interface RoadmapData {
  released_features: ReleasedFeature[];
  roadmap_phases: RoadmapPhase[];
  lifecycle_stages: LifecycleStage[];
}

interface ReleasedFeature {
  id: string;
  name: string;
  pillar: string;
  status: string;
  lifecycle_stages: string[];
  stakeholders: string[];
  description: string;
  key_capabilities: string[];
}

interface RoadmapPhase {
  phase: number;
  name: string;
  timeline: string;
  target_mrr: string;
  focus: string;
  products: PhaseProduct[];
}

interface PhaseProduct {
  name: string;
  lifecycle_stages: string[];
  stakeholders: string[];
  description: string;
  key_features: string[];
}

interface LifecycleStage {
  stage: string;
  name: string;
  description: string;
  stakeholders: StakeholderIntegration[];
}

interface StakeholderIntegration {
  name: string;
  role: string;
  onboarding_plan: string;
  products: string[];
  integration_status: string;
}

export default function ProductRoadmap({ data }: { data: RoadmapData }) {
  const [selectedPhase, setSelectedPhase] = useState<number | null>(null);
  const [selectedStage, setSelectedStage] = useState<string | null>(null);

  const getStatusColor = (status: string) => {
    if (status === "Released") return "bg-green-500";
    if (status.startsWith("Phase")) return "bg-blue-500";
    return "bg-gray-500";
  };

  const getIntegrationStatusColor = (status: string) => {
    if (status === "Released") return "text-green-600 bg-green-50";
    if (status.startsWith("Phase")) return "text-blue-600 bg-blue-50";
    if (status === "Partial") return "text-yellow-600 bg-yellow-50";
    return "text-gray-600 bg-gray-50";
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-50 to-blue-50 p-6 rounded-lg border border-green-200">
        <div className="flex items-start gap-4">
          <Target className="w-8 h-8 text-green-600 mt-1" />
          <div>
            <h2 className="text-2xl font-bold text-gray-900 mb-2">SHAED Product Roadmap</h2>
            <p className="text-gray-700">
              Comprehensive view of released features and planned integrations across the commercial vehicle lifecycle.
              Track how each stakeholder integrates with SHAED's platform from initial consideration through vehicle remarketing.
            </p>
          </div>
        </div>
      </div>

      <Tabs defaultValue="roadmap" className="w-full">
        <TabsList className="grid w-full grid-cols-2">
          <TabsTrigger value="roadmap">Product Roadmap</TabsTrigger>
          <TabsTrigger value="lifecycle">Lifecycle Stage View</TabsTrigger>
        </TabsList>

        <TabsContent value="roadmap" className="space-y-6">
          {/* Released Features Section */}
          <Card>
            <CardHeader>
              <div className="flex items-center gap-2">
                <CheckCircle2 className="w-6 h-6 text-green-600" />
                <CardTitle>Released Features</CardTitle>
              </div>
              <CardDescription>
                Currently available products serving {data.released_features.length} core capabilities across the commercial vehicle lifecycle
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {data.released_features.map((feature) => (
                  <Card key={feature.id} className="border-green-200 bg-green-50/30">
                    <CardHeader>
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <CardTitle className="text-lg">{feature.name}</CardTitle>
                          <Badge className="mt-2 bg-green-600">{feature.status}</Badge>
                        </div>
                        <Package className="w-5 h-5 text-green-600" />
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      <p className="text-sm text-gray-700">{feature.description}</p>
                      
                      <div>
                        <p className="text-xs font-semibold text-gray-600 mb-1">Lifecycle Stages:</p>
                        <div className="flex flex-wrap gap-1">
                          {feature.lifecycle_stages.map((stage) => (
                            <Badge key={stage} variant="outline" className="text-xs">
                              {stage}
                            </Badge>
                          ))}
                        </div>
                      </div>

                      <div>
                        <p className="text-xs font-semibold text-gray-600 mb-1">Key Stakeholders:</p>
                        <div className="flex flex-wrap gap-1">
                          {feature.stakeholders.slice(0, 3).map((stakeholder) => (
                            <Badge key={stakeholder} variant="secondary" className="text-xs">
                              {stakeholder}
                            </Badge>
                          ))}
                          {feature.stakeholders.length > 3 && (
                            <Badge variant="secondary" className="text-xs">
                              +{feature.stakeholders.length - 3} more
                            </Badge>
                          )}
                        </div>
                      </div>

                      <div>
                        <p className="text-xs font-semibold text-gray-600 mb-1">Capabilities:</p>
                        <ul className="text-xs text-gray-600 space-y-1">
                          {feature.key_capabilities.slice(0, 3).map((capability, idx) => (
                            <li key={idx} className="flex items-start gap-1">
                              <span className="text-green-600 mt-0.5">â€¢</span>
                              <span>{capability}</span>
                            </li>
                          ))}
                          {feature.key_capabilities.length > 3 && (
                            <li className="text-gray-500 italic">
                              +{feature.key_capabilities.length - 3} more capabilities
                            </li>
                          )}
                        </ul>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Roadmap Phases Section */}
          <Card>
            <CardHeader>
              <div className="flex items-center gap-2">
                <TrendingUp className="w-6 h-6 text-blue-600" />
                <CardTitle>Planned Integrations</CardTitle>
              </div>
              <CardDescription>
                Strategic product phases expanding stakeholder integration and platform capabilities
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                {data.roadmap_phases.map((phase) => (
                  <Card 
                    key={phase.phase} 
                    className={`border-2 cursor-pointer transition-all ${
                      selectedPhase === phase.phase 
                        ? 'border-blue-500 shadow-lg' 
                        : 'border-blue-200 hover:border-blue-400'
                    }`}
                    onClick={() => setSelectedPhase(selectedPhase === phase.phase ? null : phase.phase)}
                  >
                    <CardHeader>
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <div className="flex items-center gap-3 mb-2">
                            <Badge className="bg-blue-600">Phase {phase.phase}</Badge>
                            <span className="text-sm text-gray-600">{phase.timeline}</span>
                            <Badge variant="outline" className="text-xs">{phase.target_mrr} MRR</Badge>
                          </div>
                          <CardTitle className="text-xl">{phase.name}</CardTitle>
                          <p className="text-sm text-gray-600 mt-1">Focus: {phase.focus}</p>
                        </div>
                        <Clock className="w-5 h-5 text-blue-600" />
                      </div>
                    </CardHeader>

                    {selectedPhase === phase.phase && (
                      <CardContent>
                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
                          {phase.products.map((product, idx) => (
                            <Card key={idx} className="bg-blue-50/50">
                              <CardHeader>
                                <CardTitle className="text-base">{product.name}</CardTitle>
                              </CardHeader>
                              <CardContent className="space-y-3">
                                <p className="text-sm text-gray-700">{product.description}</p>

                                <div>
                                  <p className="text-xs font-semibold text-gray-600 mb-1">Lifecycle Stages:</p>
                                  <div className="flex flex-wrap gap-1">
                                    {product.lifecycle_stages.map((stage) => (
                                      <Badge key={stage} variant="outline" className="text-xs">
                                        {stage}
                                      </Badge>
                                    ))}
                                  </div>
                                </div>

                                <div>
                                  <p className="text-xs font-semibold text-gray-600 mb-1">Target Stakeholders:</p>
                                  <div className="flex flex-wrap gap-1">
                                    {product.stakeholders.slice(0, 4).map((stakeholder) => (
                                      <Badge key={stakeholder} variant="secondary" className="text-xs">
                                        {stakeholder}
                                      </Badge>
                                    ))}
                                    {product.stakeholders.length > 4 && (
                                      <Badge variant="secondary" className="text-xs">
                                        +{product.stakeholders.length - 4} more
                                      </Badge>
                                    )}
                                  </div>
                                </div>

                                <div>
                                  <p className="text-xs font-semibold text-gray-600 mb-1">Key Features:</p>
                                  <ul className="text-xs text-gray-600 space-y-1">
                                    {product.key_features.map((feature, fidx) => (
                                      <li key={fidx} className="flex items-start gap-1">
                                        <span className="text-blue-600 mt-0.5">â€¢</span>
                                        <span>{feature}</span>
                                      </li>
                                    ))}
                                  </ul>
                                </div>
                              </CardContent>
                            </Card>
                          ))}
                        </div>
                      </CardContent>
                    )}
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="lifecycle" className="space-y-6">
          <Card>
            <CardHeader>
              <div className="flex items-center gap-2">
                <Users className="w-6 h-6 text-purple-600" />
                <CardTitle>Stakeholder Integration by Lifecycle Stage</CardTitle>
              </div>
              <CardDescription>
                Comprehensive onboarding plans showing how each stakeholder integrates across the six lifecycle stages
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                {data.lifecycle_stages.map((stage) => (
                  <Card 
                    key={stage.stage}
                    className={`border-2 cursor-pointer transition-all ${
                      selectedStage === stage.stage 
                        ? 'border-purple-500 shadow-lg' 
                        : 'border-purple-200 hover:border-purple-400'
                    }`}
                    onClick={() => setSelectedStage(selectedStage === stage.stage ? null : stage.stage)}
                  >
                    <CardHeader>
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <div className="flex items-center gap-3 mb-2">
                            <Badge className="bg-purple-600">{stage.stage}</Badge>
                            <span className="text-sm text-gray-600">
                              {stage.stakeholders.length} Stakeholder{stage.stakeholders.length !== 1 ? 's' : ''}
                            </span>
                          </div>
                          <CardTitle className="text-xl">{stage.name}</CardTitle>
                          <p className="text-sm text-gray-600 mt-1">{stage.description}</p>
                        </div>
                      </div>
                    </CardHeader>

                    {selectedStage === stage.stage && (
                      <CardContent>
                        <div className="space-y-4">
                          {stage.stakeholders.map((stakeholder, idx) => (
                            <Card key={idx} className="bg-purple-50/50">
                              <CardHeader>
                                <div className="flex items-start justify-between">
                                  <div className="flex-1">
                                    <div className="flex items-center gap-2 mb-1">
                                      <CardTitle className="text-base">{stakeholder.name}</CardTitle>
                                      <Badge 
                                        variant={stakeholder.role === "Primary" ? "default" : "secondary"}
                                        className={stakeholder.role === "Primary" ? "bg-purple-600" : ""}
                                      >
                                        {stakeholder.role}
                                      </Badge>
                                    </div>
                                    <Badge className={getIntegrationStatusColor(stakeholder.integration_status)}>
                                      {stakeholder.integration_status}
                                    </Badge>
                                  </div>
                                </div>
                              </CardHeader>
                              <CardContent className="space-y-3">
                                <div>
                                  <p className="text-xs font-semibold text-gray-600 mb-1">Onboarding Plan:</p>
                                  <p className="text-sm text-gray-700">{stakeholder.onboarding_plan}</p>
                                </div>

                                <div>
                                  <p className="text-xs font-semibold text-gray-600 mb-1">SHAED Products:</p>
                                  <div className="flex flex-wrap gap-1">
                                    {stakeholder.products.map((product) => (
                                      <Badge key={product} variant="outline" className="text-xs">
                                        {product}
                                      </Badge>
                                    ))}
                                  </div>
                                </div>
                              </CardContent>
                            </Card>
                          ))}
                        </div>
                      </CardContent>
                    )}
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}

